
type Query{

    #ApplianceType
    findApplianceTypeById(applianceTypeId: String): ApplianceType,
    findAllApplianceTypes: [ApplianceType]

    #ElectronicDevices
    findElectronicDeviceById(electronicDeviceId: String): ElectronicDevice
    findAllElectronicDevices: [ElectronicDevice]

    #Factory
    findFactoryById(factoryId: String): Factory
    findAllFactories: [Factory]

    #Customer
    findCustomerById(customerId:String):Customer
    findAllCustomers:[Customer]

    #Repair
    findRepairById(repairId:String): Repair
    findAllRepairs:[Repair]

    #ComponentChange
    findComponentChangeById(componentChangeId: String): ComponentChange
    findAllComponentChanges: [ComponentChange]

    #DetailComponent
    findDetailComponentById(detailComponentId: String): DetailComponent
    findAllDetailComponent: [DetailComponent]

}


type Mutation{
    #ApplianceType
    createApplianceType(inputApplianceType: InputApplianceType) : ApplianceType,
    deleteApplianceTypeById(applianceTypeId: String): String
    updateApplianceType(applianceTypeId: String, inputApplianceType: InputApplianceType): ApplianceType

    #ElectronicDevice
    createElectronicDevice(inputElectronicDevice: InputElectronicDevice): ElectronicDevice,
    deleteElectronicDeviceById(electronicDeviceId: String): String,
    updateElectronicDevice(electronicDeviceId: String, inputElectronicDevice: InputElectronicDevice): ElectronicDevice

    #Factory
    createFactory(inputFactory: InputFactory): Factory,
    deleteFactoryById(factoryId: String): String,
    updateFactory(factoryId: String, inputFactory: InputFactory): Factory

    #Customer
    createCustomer(inputCustomer:InputCustomer):Customer,
    deleteCustomerById(customerId:String):String,
    updateCustomer(customerId:String,inputCustomer:InputCustomer):Customer

    #Repair
    createRepair(inputRepair:InputRepair):Repair,
    deleteRepairId(repairId:String):String,
    updateRepair(inputRepair:InputRepair,repairId:String):Repair

    #ComponentChange
    createComponentChange(inputComponentChange:InputComponentChange):ComponentChange,
    updateComponentChange(componentChangeId:String,inputComponentChange:InputComponentChange):ComponentChange,
    deleteComponentChange(componentChangeId:String):String

    #ComponentChange
    createDetailComponent(inputDetailComponent:InputDetailComponent):DetailComponent,
    updateDetailComponent(detailComponentId:String,inputDetailComponent:InputDetailComponent):DetailComponent,
    deleteDetailComponent(detailComponentId:String):String
}


type ApplianceType{
    id: ID,
    superType: ApplianceType,
    name: String,
    characteristic: String,
}

type ElectronicDevice{
    id: ID,
    name: String,
    description: String,
    applianceType: ApplianceType
}

type Factory{
    id: ID,
    rif: String,
    name: String,
    taxDomicile: String
}

type Customer{
    id:ID,
    nameCustomer: String,
    codeDocument:String,
    address:String,
    phone:String,
    email:String
}

type Repair{
     id:ID,
     repairDescription:String,
     repairDate: String,
     customer: Customer,
     electronicDevice: ElectronicDevice

}

type Component{
    id:ID,
    nameComponent:String,
    specsComponent:String

}
type ComponentChange{
    id: ID,
    repair: Repair,
    component: Component,
    quantity: String
}
type DetailComponent{
    id: ID,
    component: Component,
    electronicDevice: ElectronicDevice,
    factory: Factory,
    quantity: String,
    price: String
}
input InputApplianceType{
    idSupType: String,
    name: String!
    characteristic: String!
}

input InputElectronicDevice{
    idType: String!
    name: String!
    description: String!
}

input InputFactory{
    rif: String!
    name: String!
    taxDomicile: String!
}

input InputCustomer{
    nameCustomer: String!
    codeDocument:String!
    address:String!
    phone:String!
    email:String!
}

input InputRepair{
     repairDescription:String!
     repairDate: String!
     idDevice: String!
     idCustomer: String!
}

input InputComponentChange{
     repairId:String!
     componentId: String!
     quantity: String!
}

input InputDetailComponent{
     componentId:String!
     deviceId: String!
     factoryId: String!
     quantity: String!
     price: String!
}